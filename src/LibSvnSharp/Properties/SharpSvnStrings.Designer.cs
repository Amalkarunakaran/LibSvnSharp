//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LibSvnSharp.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SharpSvnStrings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SharpSvnStrings() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LibSvnSharp.Properties.SharpSvnStrings", typeof(SharpSvnStrings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All targets must either be Uri or Path.
        /// </summary>
        internal static string AllTargetsMustBeUriOrPath {
            get {
                return ResourceManager.GetString("AllTargetsMustBeUriOrPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All provided Uri&apos;s must be on the same server.
        /// </summary>
        internal static string AllUrisMustBeOnTheSameServer {
            get {
                return ResourceManager.GetString("AllUrisMustBeOnTheSameServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This argument is not a valid path. A Uri was specified.
        /// </summary>
        internal static string ArgumentMustBeAPathNotAUri {
            get {
                return ResourceManager.GetString("ArgumentMustBeAPathNotAUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This argument is not a valid relative path.
        /// </summary>
        internal static string ArgumentMustBeAValidRelativePath {
            get {
                return ResourceManager.GetString("ArgumentMustBeAValidRelativePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The argument must be a valid absolute repository Uri.
        /// </summary>
        internal static string ArgumentMustBeAValidRepositoryUri {
            get {
                return ResourceManager.GetString("ArgumentMustBeAValidRepositoryUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can only resolve head, number and date revisions.
        /// </summary>
        internal static string CanOnlyResolveHeadDateandExplicitRevisions {
            get {
                return ResourceManager.GetString("CanOnlyResolveHeadDateandExplicitRevisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t parse command &apos;{0}&apos;.
        /// </summary>
        internal static string CantParseCommandX {
            get {
                return ResourceManager.GetString("CantParseCommandX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The collection must at least contain one item.
        /// </summary>
        internal static string CollectionMustContainAtLeastOneItem {
            get {
                return ResourceManager.GetString("CollectionMustContainAtLeastOneItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You can only crop a node to a depth between empty and files..
        /// </summary>
        internal static string CropToValidDepth {
            get {
                return ResourceManager.GetString("CropToValidDepth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A fatal error occurred within the subversion API - (Use Ctrl+C to copy message).
        /// </summary>
        internal static string FatalExceptionInSubversionApi {
            get {
                return ResourceManager.GetString("FatalExceptionInSubversionApi", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File &apos;{0}&apos; not found.
        /// </summary>
        internal static string FileXNotFound {
            get {
                return ResourceManager.GetString("FileXNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The handler is not registered at this time.
        /// </summary>
        internal static string HandlerIsNotRegisteredAtThisTime {
            get {
                return ResourceManager.GetString("HandlerIsNotRegisteredAtThisTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid character in client name.
        /// </summary>
        internal static string InvalidCharacterInClientName {
            get {
                return ResourceManager.GetString("InvalidCharacterInClientName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid SvnRevisionType value specified.
        /// </summary>
        internal static string InvalidSvnRevisionTypeValue {
            get {
                return ResourceManager.GetString("InvalidSvnRevisionTypeValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Uri string.
        /// </summary>
        internal static string InvalidUri {
            get {
                return ResourceManager.GetString("InvalidUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The IO Thread Blocked -- Do you have a deadlock?.
        /// </summary>
        internal static string IOThreadBlocked {
            get {
                return ResourceManager.GetString("IOThreadBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to One or more items in the list are null.
        /// </summary>
        internal static string ItemInListIsNull {
            get {
                return ResourceManager.GetString("ItemInListIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The loading of the subversion mime mapping file failed.
        /// </summary>
        internal static string LoadingMimeTypesMapFileFailed {
            get {
                return ResourceManager.GetString("LoadingMimeTypesMapFileFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {This line does contain non-Utf8 characters}.
        /// </summary>
        internal static string NonUtf8ConvertableLine {
            get {
                return ResourceManager.GetString("NonUtf8ConvertableLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to At revision {0}..
        /// </summary>
        internal static string NotifyAtRevisionX {
            get {
                return ResourceManager.GetString("NotifyAtRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked out external at revision {0}..
        /// </summary>
        internal static string NotifyCheckedOutExternalAtRevisionX {
            get {
                return ResourceManager.GetString("NotifyCheckedOutExternalAtRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checked out revision {0}..
        /// </summary>
        internal static string NotifyCheckedOutRevisionX {
            get {
                return ResourceManager.GetString("NotifyCheckedOutRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported external at revision {0}..
        /// </summary>
        internal static string NotifyExportedExternalAtRevisionX {
            get {
                return ResourceManager.GetString("NotifyExportedExternalAtRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Exported revision {0}..
        /// </summary>
        internal static string NotifyExportedRevisionX {
            get {
                return ResourceManager.GetString("NotifyExportedRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to External at revision {0}..
        /// </summary>
        internal static string NotifyExternalAtRevisionX {
            get {
                return ResourceManager.GetString("NotifyExternalAtRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Removed external &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyExternalXRemoved {
            get {
                return ResourceManager.GetString("NotifyExternalXRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Failed to revert &apos;{0}&apos; -- try updating instead.
        /// </summary>
        internal static string NotifyFailedToRevertX {
            get {
                return ResourceManager.GetString("NotifyFailedToRevertX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Fetching external item into &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyFetchExternalItemIntoX {
            get {
                return ResourceManager.GetString("NotifyFetchExternalItemIntoX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Merging differences between repository URLs into &apos;{0}&apos;:.
        /// </summary>
        internal static string NotifyMergingDifferencesBetweenRepositoryUrlsIntoX {
            get {
                return ResourceManager.GetString("NotifyMergingDifferencesBetweenRepositoryUrlsIntoX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Merging r{0} into &apos;{1}&apos;:.
        /// </summary>
        internal static string NotifyMergingRXIntoY {
            get {
                return ResourceManager.GetString("NotifyMergingRXIntoY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Merging r{0} through r{1} into &apos;{2}&apos;:.
        /// </summary>
        internal static string NotifyMergingRXToRYIntoZ {
            get {
                return ResourceManager.GetString("NotifyMergingRXToRYIntoZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; is no longer a member of a change list..
        /// </summary>
        internal static string NotifyPathXIsNoLongerAMemberOfAChangeList {
            get {
                return ResourceManager.GetString("NotifyPathXIsNoLongerAMemberOfAChangeList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; is now a member of change list &apos;{1}&apos;..
        /// </summary>
        internal static string NotifyPathXIsNowAMemberOfChangeListY {
            get {
                return ResourceManager.GetString("NotifyPathXIsNowAMemberOfChangeListY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Performing status on external item at &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyPerformingStatusOnExternalItemAtX {
            get {
                return ResourceManager.GetString("NotifyPerformingStatusOnExternalItemAtX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Resolved conflicted state of &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyResolvedConflictedStateOfX {
            get {
                return ResourceManager.GetString("NotifyResolvedConflictedStateOfX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restored &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyRestoredX {
            get {
                return ResourceManager.GetString("NotifyRestoredX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Reverse-merging r{0} into &apos;{1}&apos;:.
        /// </summary>
        internal static string NotifyReverseMergingRXIntoY {
            get {
                return ResourceManager.GetString("NotifyReverseMergingRXIntoY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to --- Reverse-merging r{0} through r{1} into &apos;{2}&apos;:.
        /// </summary>
        internal static string NotifyReverseMergingRXToRYIntoZ {
            get {
                return ResourceManager.GetString("NotifyReverseMergingRXToRYIntoZ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reverted &apos;{0}&apos;.
        /// </summary>
        internal static string NotifyRevertedX {
            get {
                return ResourceManager.GetString("NotifyRevertedX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped &apos;{0}&apos; - Access denied.
        /// </summary>
        internal static string NotifySkippedAccessDeniedX {
            get {
                return ResourceManager.GetString("NotifySkippedAccessDeniedX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped missing target &apos;{0}&apos;.
        /// </summary>
        internal static string NotifySkippedMissingTargetX {
            get {
                return ResourceManager.GetString("NotifySkippedMissingTargetX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped &apos;{0}&apos; - An obstructing working copy found.
        /// </summary>
        internal static string NotifySkippedObstructionX {
            get {
                return ResourceManager.GetString("NotifySkippedObstructionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped &apos;{0}&apos;.
        /// </summary>
        internal static string NotifySkippedX {
            get {
                return ResourceManager.GetString("NotifySkippedX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Skipped &apos;{0}&apos; - Node remains in conflict.
        /// </summary>
        internal static string NotifySkippedXRemainsInConflict {
            get {
                return ResourceManager.GetString("NotifySkippedXRemainsInConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status against revision: {0}.
        /// </summary>
        internal static string NotifyStatusAgainstRevisionX {
            get {
                return ResourceManager.GetString("NotifyStatusAgainstRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Transmitting file data.
        /// </summary>
        internal static string NotifyTransmittingFileData {
            get {
                return ResourceManager.GetString("NotifyTransmittingFileData", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated external to revision {0}..
        /// </summary>
        internal static string NotifyUpdatedExternalToRevisionX {
            get {
                return ResourceManager.GetString("NotifyUpdatedExternalToRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updated to revision {0}..
        /// </summary>
        internal static string NotifyUpdatedToRevisionX {
            get {
                return ResourceManager.GetString("NotifyUpdatedToRevisionX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating &apos;{0}&apos;:.
        /// </summary>
        internal static string NotifyUpdateStartedX {
            get {
                return ResourceManager.GetString("NotifyUpdateStartedX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; locked by user &apos;{1}&apos;..
        /// </summary>
        internal static string NotifyXLockedByUserY {
            get {
                return ResourceManager.GetString("NotifyXLockedByUserY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; unlocked..
        /// </summary>
        internal static string NotifyXUnlocked {
            get {
                return ResourceManager.GetString("NotifyXUnlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The number of elements in the paths collection does not match the number in revisions.
        /// </summary>
        internal static string PathCountDoesNotMatchRevisions {
            get {
                return ResourceManager.GetString("PathCountDoesNotMatchRevisions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Path &apos;{0}&apos; contains invalid characters.
        /// </summary>
        internal static string PathXContainsInvalidCharacters {
            get {
                return ResourceManager.GetString("PathXContainsInvalidCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Paths with a length above MAX_PATH (like &apos;{0}&apos;) must be rooted..
        /// </summary>
        internal static string PathXTooLongAndNotRooted {
            get {
                return ResourceManager.GetString("PathXTooLongAndNotRooted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please restart this application before continuing.\n\nStack trace:\n{0}.
        /// </summary>
        internal static string PleaseRestartThisApplicationBeforeContinuing {
            get {
                return ResourceManager.GetString("PleaseRestartThisApplicationBeforeContinuing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property name is not valid.
        /// </summary>
        internal static string PropertyNameIsNotValid {
            get {
                return ResourceManager.GetString("PropertyNameIsNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The remote session must be open before it can perform commands.
        /// </summary>
        internal static string RemoteSessionMustBeOpenToPerformCommand {
            get {
                return ResourceManager.GetString("RemoteSessionMustBeOpenToPerformCommand", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revision must be &gt;= 0.
        /// </summary>
        internal static string RevisionMustBeGreaterThanOrEqualToZero {
            get {
                return ResourceManager.GetString("RevisionMustBeGreaterThanOrEqualToZero", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revision number must be at least 0.
        /// </summary>
        internal static string RevisionNumberMustBeAtLeast0 {
            get {
                return ResourceManager.GetString("RevisionNumberMustBeAtLeast0", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Working revision type is not supported here.
        /// </summary>
        internal static string RevisionTypeCantBeWorking {
            get {
                return ResourceManager.GetString("RevisionTypeCantBeWorking", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Revision type must be head, date or a specific revision number.
        /// </summary>
        internal static string RevisionTypeMustBeHeadDateOrSpecific {
            get {
                return ResourceManager.GetString("RevisionTypeMustBeHeadDateOrSpecific", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The session is already open.
        /// </summary>
        internal static string SessionAlreadyOpen {
            get {
                return ResourceManager.GetString("SessionAlreadyOpen", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This function is not available from managed code. .
        /// </summary>
        internal static string SvnAuthManagedPlaceholder {
            get {
                return ResourceManager.GetString("SvnAuthManagedPlaceholder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Svn operation in progress; an SvnClient instance can handle only one command at a time.
        /// </summary>
        internal static string SvnClientOperationInProgress {
            get {
                return ResourceManager.GetString("SvnClientOperationInProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subversion reported a malfunction &apos;{0}&apos; on line {2} of &apos;{1}&apos;..
        /// </summary>
        internal static string SvnMalfunctionPrefix {
            get {
                return ResourceManager.GetString("SvnMalfunctionPrefix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passed target must contain an explicit revision.
        /// </summary>
        internal static string TargetMustContainExplicitRevision {
            get {
                return ResourceManager.GetString("TargetMustContainExplicitRevision", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified target is not a valid Path target.
        /// </summary>
        internal static string TheTargetIsNotAValidPathTarget {
            get {
                return ResourceManager.GetString("TheTargetIsNotAValidPathTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified target is not a value Uri or Path target.
        /// </summary>
        internal static string TheTargetIsNotAValidUriOrPathTarget {
            get {
                return ResourceManager.GetString("TheTargetIsNotAValidUriOrPathTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified target is not a valid Uri target.
        /// </summary>
        internal static string TheTargetIsNotAValidUriTarget {
            get {
                return ResourceManager.GetString("TheTargetIsNotAValidUriTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The passed Uri is not absolute.
        /// </summary>
        internal static string UriIsNotAbsolute {
            get {
                return ResourceManager.GetString("UriIsNotAbsolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The value {0} is not a valid {1}.
        /// </summary>
        internal static string VerifyEnumFailed {
            get {
                return ResourceManager.GetString("VerifyEnumFailed", resourceCulture);
            }
        }
    }
}
